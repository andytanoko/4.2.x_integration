<project name="patch" default="patch.env" basedir=".">
  <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="./ant-contrib.jar"/>
  <taskdef name="stringutil" classname="ise.antelope.tasks.StringUtilTask" classpath="./AntelopeTasks_3.2.19.jar"/>

  <!-- =================================================================== -->
  <!-- Set global properties for this build                                -->
  <!-- =================================================================== -->
  <property environment="env"></property>
  <property file="${patch.properties.file}"></property>

  <!-- =================================================================== -->
  <!-- Patching the application runtime environment                        -->
  <!-- =================================================================== -->
  <target name="patch.env">
    <echo message="Executing target:patch.env"/>

    <!-- Added 040812NSL Set the os family name into platform property -->
    <osfamily property="platform"/>
    <if>
      <isset property="patch.properties"/>
      <then>
        <property file="${patch.properties}"/>
      </then>
    </if>

    <antcall target="patch.app.bin"/>
    <antcall target="patch.app.docs"/>
    <antcall target="patch.app.dist"/>
    <antcall target="patch.app.backend"/>
    <antcall target="patch.app.commondata"/>
  	
	<antcall target="patch.app.dbconfig"/>	  	

    <if>
	    <isset property="patch.app.dbscripts.${db.name}.list"/>
  	  <then>
          <antcall target="patch.app.db"/>
  	  </then>
	  </if>
    <if>
  	  <isset property="patch.${appserver.name}-${appserver.version}.conf.list"/>
  	  <then>
          <antcall target="patch.appserver.conf"/>
  	  </then>
  	</if>
    <!-- 040812NSL temporary comment off since not in use
    <if>
  	  <isset property="patch.${webserver.name}-${webserver.version}.conf.list"/>
  	  <then>
          <antcall target="patch.webserver.conf"/>
  	  </then>
  	</if>
    -->
    <antcall target="patch.cleanup"/>
  </target>

  <target name="patch.app.commondata" if="patch.commondata">
    <antcall target="patch.app.conf"/>       
    <antcall target="patch.app.data"/>
    <antcall target="patch.app.gtvan"/>
    <antcall target="patch.executables"/>	
  </target>
  
  <!-- =================================================================== -->
  <!-- Patching the database                                               -->
  <!-- =================================================================== -->
  <target name="patch.app.db">
    <echo message="Executing target:patch.app.db"/>
	  <propertycopy name="patch.dbscripts.list" 
                  from="patch.app.dbscripts.${db.name}.list"/>    
	<parallel>
      <antcall target="start.db"/>
      <sequential>
        <sleep seconds="5"/>
        <antcall target="check.db.status"/>
        <antcall target="exec.patch.db"/>
        <antcall target="stop.db"/>
      </sequential>
    </parallel>
  </target>

  <!-- =================================================================== -->
  <!-- Start the database                                                  -->
  <!-- =================================================================== -->
  <target name="start.db">
    <exec dir="." executable="${db.start.cmd}">
	   <arg value="${db.cmd.arg}"/>
	</exec>
  </target>

  <!-- =================================================================== -->
  <!-- Stop the database                                                   -->
  <!-- =================================================================== -->
  <target name="stop.db">
    <exec dir="." executable="${db.stop.cmd}">
		<arg value="${db.cmd.arg}"/>
	</exec>
  </target>

  <!-- =================================================================== -->
  <!-- Check the database alive status                                     -->
  <!-- =================================================================== -->
  <target name="check.db.status">
    <exec dir="." executable="${db.check.cmd}">
	</exec>
  </target>

  <!-- =================================================================== -->
  <!-- Execute the database scripts                                        -->
  <!-- =================================================================== -->
  <target name="exec.patch.db"
          depends="exec.dbscripts.patch">
  </target>

  <target name="exec.dbscripts.patch">
    <property name="dbscript.dir" value="./application/db/${db.name}"/>
    <foreach list="${patch.dbscripts.list}" target="exec.dbscripts"
             param="dbscript" inheritall="true">
    </foreach>
  </target>

  <target name="exec.dbscripts">
    <echo message="Executing target:exec.dbscripts for [${dbscript.dir}/${dbscript}]"/>
	<echo message="DB comand ${db.home}/${db.exec.cmd} "/>
    <exec executable="${basedir}/${db.patch.client.cmd}">
      <arg value="${db.home}/${db.exec.cmd}"/>
	  <arg value="${dbscript.dir}/${dbscript}"/>
	  <arg value="${db.root.password}"/>
  	</exec>
  </target>

  <target name="backup.target" if="backup.dir">
    <available file="${target.dir}" type="dir" property="target.exist"/>
    <if>
      <equals arg1="${target.exist}" arg2="true"/>
      <then>
	  
	      <!--TWX: Under window env, the dir containing \ eg. c:\gt\logs can not be replace -->
		  <!--We explicitly change it to c:/gt/ -->
	  
	      <stringutil string="${target.dir}" property="target.dir.replace">
            <replace regex="\\" replacement="/"/>
          </stringutil>
		  
		  <stringutil string="${env.GRIDTALK_HOME}" property="GRIDTALK_HOME.replace">
            <replace regex="\\" replacement="/"/>
          </stringutil>
	  
          <stringutil string="${target.dir.replace}" property="dname">
            <replace regex="${GRIDTALK_HOME.replace}" replacement=""/>
          </stringutil>
          <mkdir dir="${backup.dir}/${dname}"/>
          <echo message="copying files ${files} from dir ${target.dir}"/>
          <copy todir="${backup.dir}/${dname}"
        	  overwrite="yes"
                  flatten="${flatten}"
          	  includeEmptyDirs="yes"
          	  preservelastmodified="true"
          	  verbose="true">
             <fileset dir="${target.dir}" includes="${files}"/>
          </copy>
          <if>
            <istrue value="${restorable}"/>
            <then>
              <foreach list="${files}" param="file" target="add.restore" inheritall="true"/>
            </then>
          </if>
      </then>
    </if>  
  </target>

  <target name="add.restore" if="backout.list">
     <if>
        <istrue value="${flatten}"/>
        <then>
           <basename property="fname" file="${file}"/>
		   
		   <!--TWX replace all the / with \ under the window env -->
		   <if>
		       <equals arg1="${isWindows}" arg2="true" />
			   <then>
				    <stringutil string="${target.dir}" property="target.dir">
					  <replace regex="/" replacement="\\"/>
				    </stringutil>
					<stringutil string="${fname}" property="fname">
					  <replace regex="/" replacement="\\"/>
				    </stringutil>
			   </then>
		   </if>
		   
		   <echo message="${target.dir}${file.separator}${fname}${line.separator}" file="${backout.list}" append="true"/>
        </then>
        <else>
		   <!--TWX replace all the / with \ under the window env -->
		   <if>
		       <equals arg1="${isWindows}" arg2="true" />
			   <then>
				    <stringutil string="${target.dir}" property="target.dir">
					  <replace regex="/" replacement="\\"/>
				    </stringutil>
					<stringutil string="${file}" property="file">
					  <replace regex="/" replacement="\\"/>
				    </stringutil>
			   </then>
		   </if>
		   
           <echo message="${target.dir}${file.separator}${file}${line.separator}" file="${backout.list}" append="true"/>
        </else>
     </if>
  </target>

  <!-- =================================================================== -->
  <!-- Patching the application admin files		                           -->
  <!-- =================================================================== -->
  <target name="patch.app.bin" if="patch.app.${platform}.bin.list">
    <echo message="Executing target:patch.app.bin"/>
    <!-- copy system files to application file system -->
    <propertycopy name="patch.app.bin.list"
	              from="patch.app.${platform}.bin.list"/>

    <antcall target="backup.target">
       <param name="target.dir" value="${application.bin.dir}"/>
       <param name="files" value="${patch.app.bin.list}"/>
       <!--param name="flatten" value="yes"/-->
       <param name="restorable" value="true"/>
    </antcall>

    <mkdir dir="${application.bin.dir}"/>
    <copy todir="${application.bin.dir}"
	  overwrite="yes"
          flatten="false"
  	  includeEmptyDirs="yes"
  	  verbose="true">
        <fileset dir="./application/bin" includes="${patch.app.bin.list}"/>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Patching the application configuration properties files             -->
  <!-- =================================================================== -->
  <target name="patch.app.conf">
	  <antcall target="patch.appserver.app.conf"/>
  </target>

  <target name="patch.appserver.app.conf" if="patch.app.server.conf.list">
    <echo message="Executing target:patch.appserver.app.conf.dir"/>

    <antcall target="backup.target">
       <param name="target.dir" value="${application.conf.dir}"/>
       <param name="files" value="${patch.app.server.conf.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="true"/>
    </antcall>

    <!-- copy configuration files to application server conf. directory -->
    <copy todir="${application.conf.dir}"
	      overwrite="yes"
  		  includeEmptyDirs="yes"
  		  verbose="true">
        <fileset dir="./application/conf/server"
  	           includes="${patch.app.server.conf.list}"/>
    </copy>

    <!-- Added 040812NSL resolve path differences for unix in object mapping files -->
    <!--if>
      <equals arg1="${platform}" arg2="unix" />
      <then>
        <replace
            dir="${application.conf.dir}"
            token="include href=&quot;conf"
            value="include href=&quot;../../../../conf"
            includes="**/*.map"/>
      </then>
    </if-->
    <!-- End Added 040812NSL -->
  </target>

  <!--target name="patch.webserver.app.conf" if="patch.app.client.conf.list">
    <echo message="Executing target:patch.webserver.app.conf.dir"/>
    <copy todir="${webserver.app.conf.dir}"
	      overwrite="yes"
		  verbose="true">
      <fileset dir="./application/conf/client"
	           includes="${patch.app.client.conf.list}"/>
    </copy>
  </target-->

  <!-- =================================================================== -->
  <!-- Patching the application data files		                           -->
  <!-- =================================================================== -->
  <target name="patch.app.data" if="patch.app.data.list">
    <echo message="Executing target:patch.app.data"/>
    
    <antcall target="backup.target">
       <param name="target.dir" value="${application.data.dir}"/>
       <param name="files" value="${patch.app.data.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="true"/>
    </antcall>

    <!-- copy system files to application file system -->
    <copy todir="${application.data.dir}"
	      overwrite="yes"
  		  includeEmptyDirs="yes"
  		  verbose="true">
        <fileset dir="./application/data" includes="${patch.app.data.list}"/>
    </copy>
  </target>


  <!-- =================================================================== -->
  <!-- Patching the application document files		                           -->
  <!-- =================================================================== -->
  <target name="patch.app.docs">
    <echo message="Executing target:patch.app.docs"/>
    
    <antcall target="backup.target">
       <param name="target.dir" value="${application.docs.dir}"/>
       <param name="files" value="**"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="true"/>
    </antcall>

    <!-- copy system files to application file system -->
    <mkdir dir="${application.docs.dir}"/>
    <copy todir="${application.docs.dir}"
	      overwrite="yes"
  		  includeEmptyDirs="yes"
  		  verbose="true">
        <fileset dir="./application/docs" includes="**"/>
    </copy>
  </target>


  <!-- =================================================================== -->
  <!-- Patching the application distribution files		                   -->
  <!-- =================================================================== -->
  <target name="patch.app.dist">
    <echo message="Executing target:patch.app.dist"/>
  	<if>
  	  <isset property="appserver.home"/>
  	  <then>

  	      <antcall target="backup.target">
                 <param name="target.dir" value="${appserver.deploy.dir}"/>
                 <param name="files" value="*.ear"/>
                 <param name="flatten" value="no"/>
                 <param name="restorable" value="true"/>
          </antcall>

		<available file="${appserver.deploy.dir}/txmr.war" property="is.txmr.exist" />
  	  	<if>
  	  		<isset property="is.txmr.exist"/>
  	  		<then>
	  	  		<antcall target="backup.target">
	  	  			<param name="target.dir" value="${appserver.deploy.dir}"/>
	  	  		    <param name="files" value="*txmr.war,txmr.war/**"/>
	  	  		    <param name="flatten" value="no"/>
	  	  		    <param name="restorable" value="true"/>
	  	  		</antcall>
  	  	     </then>
  	  	</if>
			  
			  
    	 <delete includeEmptyDirs="true" quiet="true">
            <fileset dir="${appserver.deploy.dir}/txmr.war"/>
    	 </delete>
    	 
          <copy todir="${appserver.deploy.dir}" overwrite="yes" verbose="true">
            <fileset dir="./application/dist/${appserver.name}-${appserver.version}"
  	               includes="*.ear,txmr.war"/>
          </copy>
  	  </then>
  	</if>

    <!-- 040812NSL commented off since not in use
  	<if>
  	  <isset property="webserver.home"/>
  	  <then>
  	    <delete includeEmptyDirs="true">
            <fileset dir="${webserver.app.dir}" includes="${application.name}*/**"/>
    	    </delete>
          <copy todir="${webserver.deploy.dir}" overwrite="yes" verbose="true">
            <fileset dir="./application/dist/${webserver.name}-${webserver.version}"
  	               includes="*.war"/>
          </copy>
  	  </then>
  	</if>
    -->
  </target>

  <!-- =================================================================== -->
  <!-- Patching the application backend files		                       -->
  <!-- =================================================================== -->
  <target name="patch.app.backend" if="patch.app.backend.list">
    <echo message="Executing target:patch.app.backend"/>

    <antcall target="backup.target">
       <param name="target.dir" value="${application.backend.dir}"/>
       <param name="files" value="${patch.app.backend.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="true"/>
    </antcall>

    <!-- copy system files to application file system -->
    <copy todir="${application.backend.dir}"
	      overwrite="yes"
  		  includeEmptyDirs="yes"
  		  verbose="true">
        <fileset dir="./application/backend" includes="${patch.app.backend.list}"/>
    </copy>
  </target>


  <!-- =================================================================== -->
  <!-- Patching the application server configuration files                 -->
  <!-- =================================================================== -->
  <target name="patch.appserver.conf">
    <echo message="Executing target:patch.appserver.conf"/>
  	<propertycopy name="patch.appserver.conf.list"
  	              from="patch.${appserver.name}-${appserver.version}.conf.list"/>
  	              
    <antcall target="backup.target">
       <param name="target.dir" value="${appserver.home}"/>
       <param name="files" value="${patch.appserver.conf.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="true"/>
    </antcall>

    <!-- copy system files to application file system -->
    <copy todir="${appserver.home}" overwrite="yes" verbose="true">
      <fileset dir="./appserver/${appserver.name}-${appserver.version}"
	           includes="${patch.appserver.conf.list}"/>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Patching the web server configuration files                         -->
  <!-- =================================================================== -->
  <!--target name="patch.webserver.conf">
    <echo message="Executing target:patch.webserver.conf"/>
  	<propertycopy name="patch.webserver.conf.list"
  	              from="patch.${webserver.name}-${webserver.version}.conf.list"/>

    <copy todir="${webserver.home}" overwrite="yes" verbose="true">
      <fileset dir="./webserver/${webserver.name}-${webserver.version}"
	           includes="${patch.webserver.conf.list}"/>
    </copy>
  </target-->

  <!-- =================================================================== -->
  <!-- Invoke additional patch executables                                 -->
  <!-- =================================================================== -->
  <target name="patch.executables" if="patch.${platform}.executables.list">
  	<propertycopy name="patch.executables.list"
  	              from="patch.${platform}.executables.list"/>

    <foreach list="${patch.executables.list}" target="patch.executable"
             param="patch.executable.command" inheritall="true">
    </foreach>
  </target>

  <target name="patch.executable">    
    <echo message="Executing target:patch.executable:${patch.executable.command}"/>
    <if>
      <equals arg1="${platform}" arg2="unix" />
      <then>
        <exec dir="./patch/exec" 
    	      vmlauncher="false" 
    		  executable="/bin/sh">
          <arg value="${patch.executable.command}"/>
          <arg value="../../exec.log"/>
          <arg value="../../exec_err.log"/>
        </exec>
      </then>
      <else>
        <exec dir="./patch/exec" 
    	      vmlauncher="false" 
    		  executable="start">
          <arg value="${patch.executable.command}"/>
          <arg value="../../exec.log"/>
          <arg value="../../exec_err.log"/>
        </exec>
     </else>
   </if>     
  </target>

  <!-- =================================================================== -->
  <!-- Invoke any cleaning up operation                                    -->
  <!-- =================================================================== -->
  <target name="patch.cleanup">
    <echo message="Executing target:patch.cleanup"/>
	<antcall target="delete.appserver.files"/>
	<antcall target="delete.app.backend.files"/>
  	<antcall target="delete.app.docs"/>
  	<antcall target="delete.app.commondata"/>
	<antcall target="delete.app.bin"/>
  </target>

  <!-- Note that patch.commondata refer to those config/data files
       under data/GNapps.
   -->
  <target name="delete.app.commondata" if="patch.commondata">
    <antcall target="delete.app.data"/>
    <antcall target="delete.app.conf"/>
    <antcall target="delete.app.gtvan"/>
  </target>

  <target name="delete.app.data" if="delete.app.data.list">
    <echo message="Executing target:delete.app.data"/>
    
    <antcall target="backup.target">
       <param name="target.dir" value="${application.data.dir}"/>
       <param name="files" value="${delete.app.data.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="false"/>
    </antcall>

    <delete verbose="true">
      <fileset dir="${application.data.dir}" includes="${delete.app.data.list}"/>
    </delete>
  </target>

  <target name="delete.app.conf" if="delete.app.conf.list">
    <echo message="Executing target:delete.app.conf"/>
    
    <antcall target="backup.target">
       <param name="target.dir" value="${application.conf.dir}"/>
       <param name="files" value="${delete.app.conf.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="false"/>
    </antcall>

    <delete>
      <fileset dir="${application.conf.dir}" includes="${delete.app.conf.list}"/>
    </delete>
  </target>

  <target name="delete.appserver.files"
          if="delete.${appserver.name}-${appserver.version}.conf.list">
    <echo message="Executing target:delete.appserver.files"/>
    <propertycopy name="delete.appserver.conf.list"
	              from="delete.${appserver.name}-${appserver.version}.conf.list"/>

    <antcall target="backup.target">
       <param name="target.dir" value="${appserver.home}"/>
       <param name="files" value="${delete.appserver.conf.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="false"/>
    </antcall>

    <delete includeemptydirs='true'>
      <fileset dir="${appserver.home}" includes="${delete.appserver.conf.list}"/>
    </delete>
  </target>

  <target name="delete.app.backend.files" if="delete.app.backend.list">
    <echo message="Executing target:delete.app.backend.files"/>

    <antcall target="backup.target">
       <param name="target.dir" value="${application.backend.dir}"/>
       <param name="files" value="${delete.app.backend.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="false"/>
    </antcall>

    <delete>
      <fileset dir="${application.backend.dir}" includes="${delete.app.backend.list}"/>
    </delete>
  </target>

	<!-- Delete files under <GRIDTALK_HOME>/docs -->
	<target name="delete.app.docs" if="delete.app.docs.list">
	    <echo message="Executing target:delete.app.docs"/>
	    
	    <antcall target="backup.target">
	       <param name="target.dir" value="${application.docs.dir}"/>
	       <param name="files" value="${delete.app.docs.list}"/>
	       <param name="flatten" value="no"/>
	       <param name="restorable" value="false"/>
	    </antcall>

	    <delete verbose="true" includeemptydirs='true'>
	      <fileset dir="${application.docs.dir}" includes="${delete.app.docs.list}"/>
		</delete>
	</target>
	
	<!-- Delete files under <GRIDTALK_HOME>/bin -->
	<target name="delete.app.bin" if="delete.app.bin.list">
		<echo message="Executing target:delete.app.bin"/>
		    
		<antcall target="backup.target">
			<param name="target.dir" value="${application.bin.dir}"/>
			<param name="files" value="${delete.app.bin.list}"/>
		    <param name="flatten" value="no"/>
		    <param name="restorable" value="false"/>
		</antcall>

		<delete verbose="true" includeemptydirs='true'>
			<fileset dir="${application.bin.dir}" includes="${delete.app.bin.list}"/>
		</delete>
	</target>
	
  <!-- =================================================================== -->
  <!-- Patching the application gtvan files		                       -->
  <!-- =================================================================== -->
  <target name="patch.app.gtvan" if="patch.app.gtvan.list">
    <echo message="Executing target:patch.app.gtvan"/>

    <antcall target="backup.target">
       <param name="target.dir" value="${application.gtvan.dir}"/>
       <param name="files" value="${patch.app.gtvan.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="true"/>
    </antcall>

    <copy todir="${application.gtvan.dir}"
	      overwrite="yes"
  		  includeEmptyDirs="yes"
  		  verbose="true">
        <fileset dir="./application/gtvan" includes="${patch.app.gtvan.list}"/>
    </copy>
  </target>

  <target name="delete.app.gtvan" if="delete.app.gtvan.list">
    <echo message="Executing target:delete.app.gtvan"/>

    <antcall target="backup.target">
       <param name="target.dir" value="${application.gtvan.dir}"/>
       <param name="files" value="${delete.app.gtvan.list}"/>
       <param name="flatten" value="no"/>
       <param name="restorable" value="false"/>
    </antcall>

    <delete>
      <fileset dir="${application.gtvan.dir}" includes="${delete.app.gtvan.list}"/>
    </delete>
  </target>


	<!-- =================================================================== -->
	<!-- Patching the database configuration files		                     -->
	<!-- =================================================================== -->
	<target name="patch.app.dbconfig" if="patch.app.dbconfig.${db.name}.list">
		<echo message="Executing target:patch.app.dbconfig"/>

		<propertycopy name="patch.dbdata.list" 
			          from="patch.app.dbconfig.${db.name}.list"/> 
		
		<antcall target="backup.target">
	       <param name="target.dir" value="${db.data.dir}"/>
	       <param name="files" value="${patch.dbdata.list}"/>
	       <param name="flatten" value="no"/>
	       <param name="restorable" value="true"/>
	    </antcall>

	    <!-- copy system files to application file system -->
	    <copy todir="${db.data.dir}"
		      overwrite="yes"
	  		  includeEmptyDirs="yes"
	  		  verbose="true">
	        <fileset dir="./dbserver/db" includes="${patch.dbdata.list}"/>
	    </copy>
	</target>
	
</project>